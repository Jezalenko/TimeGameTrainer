{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";var _excluded=[\"uri\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{PermissionStatus,SyntheticPlatformEmitter}from'expo-modules-core';import{RecordingOptionsPresets}from\"./Audio/RecordingConstants\";function getPermissionWithQueryAsync(_x){return _getPermissionWithQueryAsync.apply(this,arguments);}function _getPermissionWithQueryAsync(){_getPermissionWithQueryAsync=_asyncToGenerator(function*(name){if(!navigator||!navigator.permissions||!navigator.permissions.query)return null;try{var _yield$navigator$perm=yield navigator.permissions.query({name:name}),state=_yield$navigator$perm.state;switch(state){case'granted':return PermissionStatus.GRANTED;case'denied':return PermissionStatus.DENIED;default:return PermissionStatus.UNDETERMINED;}}catch(_unused2){return PermissionStatus.UNDETERMINED;}});return _getPermissionWithQueryAsync.apply(this,arguments);}function getUserMedia(constraints){if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){return navigator.mediaDevices.getUserMedia(constraints);}var getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||function(){var error=new Error('Permission unimplemented');error.code=0;error.name='NotAllowedError';throw error;};return new Promise(function(resolve,reject){getUserMedia.call(navigator,constraints,resolve,reject);});}function getStatusFromMedia(media){if(!media){return{isLoaded:false,error:undefined};}var isPlaying=!!(media.currentTime>0&&!media.paused&&!media.ended&&media.readyState>2);var status={isLoaded:true,uri:media.src,progressUpdateIntervalMillis:100,durationMillis:media.duration*1000,positionMillis:media.currentTime*1000,shouldPlay:media.autoplay,isPlaying:isPlaying,isBuffering:false,rate:media.playbackRate,shouldCorrectPitch:false,volume:media.volume,audioPan:0,isMuted:media.muted,isLooping:media.loop,didJustFinish:media.ended};return status;}function setStatusForMedia(media,status){if(status.positionMillis!==undefined){media.currentTime=status.positionMillis/1000;}if(status.shouldPlay!==undefined){if(status.shouldPlay){media.play();}else{media.pause();}}if(status.rate!==undefined){media.playbackRate=status.rate;}if(status.volume!==undefined){media.volume=status.volume;}if(status.isMuted!==undefined){media.muted=status.isMuted;}if(status.isLooping!==undefined){media.loop=status.isLooping;}return getStatusFromMedia(media);}var mediaRecorder=null;var mediaRecorderUptimeOfLastStartResume=0;var mediaRecorderDurationAlreadyRecorded=0;var mediaRecorderIsRecording=false;function getAudioRecorderDurationMillis(){var duration=mediaRecorderDurationAlreadyRecorded;if(mediaRecorderIsRecording&&mediaRecorderUptimeOfLastStartResume>0){duration+=Date.now()-mediaRecorderUptimeOfLastStartResume;}return duration;}export default{get name(){return'ExponentAV';},getStatusForVideo:function(){var _getStatusForVideo=_asyncToGenerator(function*(element){return getStatusFromMedia(element);});function getStatusForVideo(_x2){return _getStatusForVideo.apply(this,arguments);}return getStatusForVideo;}(),loadForVideo:function(){var _loadForVideo=_asyncToGenerator(function*(element,nativeSource,fullInitialStatus){return getStatusFromMedia(element);});function loadForVideo(_x3,_x4,_x5){return _loadForVideo.apply(this,arguments);}return loadForVideo;}(),unloadForVideo:function(){var _unloadForVideo=_asyncToGenerator(function*(element){return getStatusFromMedia(element);});function unloadForVideo(_x6){return _unloadForVideo.apply(this,arguments);}return unloadForVideo;}(),setStatusForVideo:function(){var _setStatusForVideo=_asyncToGenerator(function*(element,status){return setStatusForMedia(element,status);});function setStatusForVideo(_x7,_x8){return _setStatusForVideo.apply(this,arguments);}return setStatusForVideo;}(),replayVideo:function(){var _replayVideo=_asyncToGenerator(function*(element,status){return setStatusForMedia(element,status);});function replayVideo(_x9,_x10){return _replayVideo.apply(this,arguments);}return replayVideo;}(),setAudioMode:function(){var _setAudioMode=_asyncToGenerator(function*(){});function setAudioMode(){return _setAudioMode.apply(this,arguments);}return setAudioMode;}(),setAudioIsEnabled:function(){var _setAudioIsEnabled=_asyncToGenerator(function*(){});function setAudioIsEnabled(){return _setAudioIsEnabled.apply(this,arguments);}return setAudioIsEnabled;}(),getStatusForSound:function(){var _getStatusForSound=_asyncToGenerator(function*(element){return getStatusFromMedia(element);});function getStatusForSound(_x11){return _getStatusForSound.apply(this,arguments);}return getStatusForSound;}(),loadForSound:function(){var _loadForSound=_asyncToGenerator(function*(nativeSource,fullInitialStatus){var source=typeof nativeSource==='string'?nativeSource:nativeSource.uri;var media=new Audio(source);media.ontimeupdate=function(){SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus',{key:media,status:getStatusFromMedia(media)});};media.onerror=function(){SyntheticPlatformEmitter.emit('ExponentAV.onError',{key:media,error:media.error.message});};var status=setStatusForMedia(media,fullInitialStatus);return[media,status];});function loadForSound(_x12,_x13){return _loadForSound.apply(this,arguments);}return loadForSound;}(),unloadForSound:function(){var _unloadForSound=_asyncToGenerator(function*(element){element.pause();element.removeAttribute('src');element.load();return getStatusFromMedia(element);});function unloadForSound(_x14){return _unloadForSound.apply(this,arguments);}return unloadForSound;}(),setStatusForSound:function(){var _setStatusForSound=_asyncToGenerator(function*(element,status){return setStatusForMedia(element,status);});function setStatusForSound(_x15,_x16){return _setStatusForSound.apply(this,arguments);}return setStatusForSound;}(),replaySound:function(){var _replaySound=_asyncToGenerator(function*(element,status){return setStatusForMedia(element,status);});function replaySound(_x17,_x18){return _replaySound.apply(this,arguments);}return replaySound;}(),getAudioRecordingStatus:function(){var _getAudioRecordingStatus=_asyncToGenerator(function*(){var _mediaRecorder,_mediaRecorder2,_mediaRecorder3;return{canRecord:((_mediaRecorder=mediaRecorder)==null?void 0:_mediaRecorder.state)==='recording'||((_mediaRecorder2=mediaRecorder)==null?void 0:_mediaRecorder2.state)==='inactive',isRecording:((_mediaRecorder3=mediaRecorder)==null?void 0:_mediaRecorder3.state)==='recording',isDoneRecording:false,durationMillis:getAudioRecorderDurationMillis(),uri:null};});function getAudioRecordingStatus(){return _getAudioRecordingStatus.apply(this,arguments);}return getAudioRecordingStatus;}(),prepareAudioRecorder:function(){var _prepareAudioRecorder=_asyncToGenerator(function*(options){if(typeof navigator!=='undefined'&&!navigator.mediaDevices){throw new Error('No media devices available');}mediaRecorderUptimeOfLastStartResume=0;mediaRecorderDurationAlreadyRecorded=0;var stream=yield getUserMedia({audio:true});mediaRecorder=new window.MediaRecorder(stream,(options==null?void 0:options.web)||RecordingOptionsPresets.HIGH_QUALITY.web);mediaRecorder.addEventListener('pause',function(){mediaRecorderDurationAlreadyRecorded=getAudioRecorderDurationMillis();mediaRecorderIsRecording=false;});mediaRecorder.addEventListener('resume',function(){mediaRecorderUptimeOfLastStartResume=Date.now();mediaRecorderIsRecording=true;});mediaRecorder.addEventListener('start',function(){mediaRecorderUptimeOfLastStartResume=Date.now();mediaRecorderDurationAlreadyRecorded=0;mediaRecorderIsRecording=true;});mediaRecorder.addEventListener('stop',function(){mediaRecorderDurationAlreadyRecorded=getAudioRecorderDurationMillis();mediaRecorderIsRecording=false;stream.getTracks().forEach(function(track){return track.stop();});});var _yield$this$getAudioR=yield this.getAudioRecordingStatus(),uri=_yield$this$getAudioR.uri,status=_objectWithoutProperties(_yield$this$getAudioR,_excluded);return{uri:null,status:status};});function prepareAudioRecorder(_x19){return _prepareAudioRecorder.apply(this,arguments);}return prepareAudioRecorder;}(),startAudioRecording:function(){var _startAudioRecording=_asyncToGenerator(function*(){if(mediaRecorder===null){throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');}if(mediaRecorder.state==='paused'){mediaRecorder.resume();}else{mediaRecorder.start();}return this.getAudioRecordingStatus();});function startAudioRecording(){return _startAudioRecording.apply(this,arguments);}return startAudioRecording;}(),pauseAudioRecording:function(){var _pauseAudioRecording=_asyncToGenerator(function*(){if(mediaRecorder===null){throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');}mediaRecorder.pause();return this.getAudioRecordingStatus();});function pauseAudioRecording(){return _pauseAudioRecording.apply(this,arguments);}return pauseAudioRecording;}(),stopAudioRecording:function(){var _stopAudioRecording=_asyncToGenerator(function*(){if(mediaRecorder===null){throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');}if(mediaRecorder.state==='inactive'){return this.getAudioRecordingStatus();}var dataPromise=new Promise(function(resolve){return mediaRecorder.addEventListener('dataavailable',function(e){return resolve(e.data);});});mediaRecorder.stop();var data=yield dataPromise;var url=URL.createObjectURL(data);return _objectSpread(_objectSpread({},yield this.getAudioRecordingStatus()),{},{uri:url});});function stopAudioRecording(){return _stopAudioRecording.apply(this,arguments);}return stopAudioRecording;}(),unloadAudioRecorder:function(){var _unloadAudioRecorder=_asyncToGenerator(function*(){mediaRecorder=null;});function unloadAudioRecorder(){return _unloadAudioRecorder.apply(this,arguments);}return unloadAudioRecorder;}(),getPermissionsAsync:function(){var _getPermissionsAsync=_asyncToGenerator(function*(){var maybeStatus=yield getPermissionWithQueryAsync('microphone');switch(maybeStatus){case PermissionStatus.GRANTED:return{status:PermissionStatus.GRANTED,expires:'never',canAskAgain:true,granted:true};case PermissionStatus.DENIED:return{status:PermissionStatus.DENIED,expires:'never',canAskAgain:true,granted:false};default:return yield this.requestPermissionsAsync();}});function getPermissionsAsync(){return _getPermissionsAsync.apply(this,arguments);}return getPermissionsAsync;}(),requestPermissionsAsync:function(){var _requestPermissionsAsync=_asyncToGenerator(function*(){try{var stream=yield getUserMedia({audio:true});stream.getTracks().forEach(function(track){return track.stop();});return{status:PermissionStatus.GRANTED,expires:'never',canAskAgain:true,granted:true};}catch(_unused){return{status:PermissionStatus.DENIED,expires:'never',canAskAgain:true,granted:false};}});function requestPermissionsAsync(){return _requestPermissionsAsync.apply(this,arguments);}return requestPermissionsAsync;}()};","map":{"version":3,"names":["PermissionStatus","SyntheticPlatformEmitter","RecordingOptionsPresets","getPermissionWithQueryAsync","_x","_getPermissionWithQueryAsync","apply","arguments","_asyncToGenerator","name","navigator","permissions","query","_yield$navigator$perm","state","GRANTED","DENIED","UNDETERMINED","_unused2","getUserMedia","constraints","mediaDevices","webkitGetUserMedia","mozGetUserMedia","error","Error","code","Promise","resolve","reject","call","getStatusFromMedia","media","isLoaded","undefined","isPlaying","currentTime","paused","ended","readyState","status","uri","src","progressUpdateIntervalMillis","durationMillis","duration","positionMillis","shouldPlay","autoplay","isBuffering","rate","playbackRate","shouldCorrectPitch","volume","audioPan","isMuted","muted","isLooping","loop","didJustFinish","setStatusForMedia","play","pause","mediaRecorder","mediaRecorderUptimeOfLastStartResume","mediaRecorderDurationAlreadyRecorded","mediaRecorderIsRecording","getAudioRecorderDurationMillis","Date","now","getStatusForVideo","_getStatusForVideo","element","_x2","loadForVideo","_loadForVideo","nativeSource","fullInitialStatus","_x3","_x4","_x5","unloadForVideo","_unloadForVideo","_x6","setStatusForVideo","_setStatusForVideo","_x7","_x8","replayVideo","_replayVideo","_x9","_x10","setAudioMode","_setAudioMode","setAudioIsEnabled","_setAudioIsEnabled","getStatusForSound","_getStatusForSound","_x11","loadForSound","_loadForSound","source","Audio","ontimeupdate","emit","key","onerror","message","_x12","_x13","unloadForSound","_unloadForSound","removeAttribute","load","_x14","setStatusForSound","_setStatusForSound","_x15","_x16","replaySound","_replaySound","_x17","_x18","getAudioRecordingStatus","_getAudioRecordingStatus","_mediaRecorder","_mediaRecorder2","_mediaRecorder3","canRecord","isRecording","isDoneRecording","prepareAudioRecorder","_prepareAudioRecorder","options","stream","audio","window","MediaRecorder","web","HIGH_QUALITY","addEventListener","getTracks","forEach","track","stop","_yield$this$getAudioR","_objectWithoutProperties","_excluded","_x19","startAudioRecording","_startAudioRecording","resume","start","pauseAudioRecording","_pauseAudioRecording","stopAudioRecording","_stopAudioRecording","dataPromise","e","data","url","URL","createObjectURL","_objectSpread","unloadAudioRecorder","_unloadAudioRecorder","getPermissionsAsync","_getPermissionsAsync","maybeStatus","expires","canAskAgain","granted","requestPermissionsAsync","_requestPermissionsAsync","_unused"],"sources":["../src/ExponentAV.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport type { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV.types';\nimport type { RecordingStatus } from './Audio/Recording.types';\nimport { RecordingOptionsPresets } from './Audio/RecordingConstants';\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch {\n    // Firefox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media?: HTMLMediaElement): AVPlaybackStatus {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined,\n    };\n  }\n\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AVPlaybackStatus = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100, //TODO: Bacon: Add interval between calls\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    // playableDurationMillis: media.buffered * 1000,\n    // seekMillisToleranceBefore?: number\n    // seekMillisToleranceAfter?: number\n    shouldPlay: media.autoplay,\n    isPlaying,\n    isBuffering: false, //media.waiting,\n    rate: media.playbackRate,\n    // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    audioPan: 0,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended,\n  };\n\n  return status;\n}\n\nfunction setStatusForMedia(\n  media: HTMLMediaElement,\n  status: AVPlaybackStatusToSet\n): AVPlaybackStatus {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  // if (status.progressUpdateIntervalMillis !== undefined) {\n  //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n  // }\n  // if (status.seekMillisToleranceBefore !== undefined) {\n  //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n  // }\n  // if (status.seekMillisToleranceAfter !== undefined) {\n  //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n  // }\n  // if (status.shouldCorrectPitch !== undefined) {\n  //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n  // }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n\n  return getStatusFromMedia(media);\n}\n\nlet mediaRecorder: null | any /*MediaRecorder*/ = null;\nlet mediaRecorderUptimeOfLastStartResume: number = 0;\nlet mediaRecorderDurationAlreadyRecorded: number = 0;\nlet mediaRecorderIsRecording: boolean = false;\n\nfunction getAudioRecorderDurationMillis() {\n  let duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentAV';\n  },\n  async getStatusForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async loadForVideo(\n    element: HTMLMediaElement,\n    nativeSource: AVPlaybackNativeSource,\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async unloadForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async setStatusForVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replayVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  /* Audio */\n  async setAudioMode() {},\n  async setAudioIsEnabled() {},\n  async getStatusForSound(element: HTMLMediaElement) {\n    return getStatusFromMedia(element);\n  },\n  async loadForSound(\n    nativeSource: string | { uri: string; [key: string]: any },\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<[HTMLMediaElement, AVPlaybackStatus]> {\n    const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n    const media = new Audio(source);\n\n    media.ontimeupdate = () => {\n      SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n        key: media,\n        status: getStatusFromMedia(media),\n      });\n    };\n\n    media.onerror = () => {\n      SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n        key: media,\n        error: media.error!.message,\n      });\n    };\n\n    const status = setStatusForMedia(media, fullInitialStatus);\n\n    return [media, status];\n  },\n  async unloadForSound(element: HTMLMediaElement) {\n    element.pause();\n    element.removeAttribute('src');\n    element.load();\n    return getStatusFromMedia(element);\n  },\n  async setStatusForSound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replaySound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n\n  /* Recording */\n  //   async setUnloadedCallbackForAndroidRecording() {},\n  async getAudioRecordingStatus(): Promise<RecordingStatus> {\n    return {\n      canRecord: mediaRecorder?.state === 'recording' || mediaRecorder?.state === 'inactive',\n      isRecording: mediaRecorder?.state === 'recording',\n      isDoneRecording: false,\n      durationMillis: getAudioRecorderDurationMillis(),\n      uri: null,\n    };\n  },\n  async prepareAudioRecorder(options): Promise<{\n    uri: string | null;\n    // status is of type RecordingStatus, but without the canRecord field populated\n    status: Pick<RecordingStatus, Exclude<keyof RecordingStatus, 'canRecord'>>;\n  }> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n      throw new Error('No media devices available');\n    }\n\n    mediaRecorderUptimeOfLastStartResume = 0;\n    mediaRecorderDurationAlreadyRecorded = 0;\n\n    const stream = await getUserMedia({ audio: true });\n\n    mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options?.web || RecordingOptionsPresets.HIGH_QUALITY.web\n    );\n\n    mediaRecorder.addEventListener('pause', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n    });\n\n    mediaRecorder.addEventListener('resume', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('start', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderDurationAlreadyRecorded = 0;\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('stop', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n\n      // Clears recording icon in Chrome tab\n      stream.getTracks().forEach((track) => track.stop());\n    });\n\n    const { uri, ...status } = await this.getAudioRecordingStatus();\n\n    return { uri: null, status };\n  },\n  async startAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'paused') {\n      mediaRecorder.resume();\n    } else {\n      mediaRecorder.start();\n    }\n\n    return this.getAudioRecordingStatus();\n  },\n  async pauseAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    // Set status to paused\n    mediaRecorder.pause();\n\n    return this.getAudioRecordingStatus();\n  },\n  async stopAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'inactive') {\n      return this.getAudioRecordingStatus();\n    }\n\n    const dataPromise = new Promise<Blob>((resolve) =>\n      mediaRecorder.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n\n    mediaRecorder.stop();\n\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n\n    return {\n      ...(await this.getAudioRecordingStatus()),\n      uri: url,\n    };\n  },\n  async unloadAudioRecorder(): Promise<void> {\n    mediaRecorder = null;\n  },\n\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    const maybeStatus = await getPermissionWithQueryAsync('microphone');\n    switch (maybeStatus) {\n      case PermissionStatus.GRANTED:\n        return {\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        };\n      case PermissionStatus.DENIED:\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      default:\n        return await this.requestPermissionsAsync();\n    }\n  },\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    try {\n      const stream = await getUserMedia({ audio: true });\n      stream.getTracks().forEach((track) => track.stop());\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    } catch {\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}